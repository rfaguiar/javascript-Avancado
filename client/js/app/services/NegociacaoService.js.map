{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","Promise","resolve","reject","get","then","negociacoes","map","Date","objecto","data","quantidade","valor","catch","console","log","erro","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","Erro","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\nimport {ConnectionFactory} from './ConnectionFactory';\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\nimport {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoService {\n\n    constructor () {\n\n        this._http = new HttpService();\n    }\n\n    obterNegociacoesDaSemana() {\n\n        return new Promise((resolve, reject) => {\n\n            this._http\n                    .get('/negociacoes/semana')\n                    .then(negociacoes => resolve(negociacoes.map(objecto => new Negociacao(new Date(objecto.data), objecto.quantidade, objecto.valor))))\n                    .catch(erro => {\n                        console.log(erro);\n                        reject('Não foi possível obter as negociações da semana.');\n                    });\n        });\n    }\n\n    obterNegociacoesDaSemanaAnterior() {\n\n        return new Promise((resolve, reject) => {\n            this._http\n                    .get('/negociacoes/anterior')\n                    .then(negociacoes => resolve(negociacoes.map(objecto => new Negociacao(new Date(objecto.data), objecto.quantidade, objecto.valor))))\n                    .catch(erro => {\n                        console.log(erro);\n                        reject('Não foi possível obter as negociações da semana anterior.');\n                    });\n        });\n        \n    }\n\n    obterNegociacoesDaSemanaRetrasada() {\n\n        return new Promise((resolve, reject) => {\n\n            this._http\n                    .get('/negociacoes/retrasada')\n                    .then(negociacoes => resolve(negociacoes.map(objecto => new Negociacao(new Date(objecto.data), objecto.quantidade, objecto.valor))))\n                    .catch(erro => {\n                        console.log(erro);\n                        reject('Não foi possível obter as negociações da semana retrasada.');\n                    });\n        });\n    }\n\n    obterNegociacoes() {\n\n        return Promise.all([\n            this.obterNegociacoesDaSemana(),\n            this.obterNegociacoesDaSemanaAnterior(),\n            this.obterNegociacoesDaSemanaRetrasada()])\n        .then(periodos => {\n            let negociacoes = periodos\n                .reduce((dados, periodo) => dados.concat(periodo), [])\n                .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor));\n\n            return negociacoes;\n        }).catch(erro => {throw new Erro(erro)});\n    }\n\n    cadastra (negociacao) {\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.adiciona(negociacao))\n            .then(() => 'Negociação adicionada com sucesso')\n            .catch(() => {throw new Erro(erro)});\n    }\n\n    lista () {\n        \n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.listaTodos())\n            .catch(() => {throw new Erro(erro)});\n    }\n\n    apaga () {\n\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.apagaTodos())\n            .catch(() => {throw new Erro(erro)});\n    }\n\n    importa (listaAtual) {\n\n        return this.obterNegociacoes()\n            .then(negociacoes => negociacoes.filter(negociacao => \n                !listaAtual.negociacoes.some(negociacaoExistente =>\n                    negociacao.isEquals(negociacaoExistente)))\n            ).catch(erro => {\n                console.log(erro);\n                reject('Não foi possível obter as negociações para importar.');\n            });\n    }\n}"]}